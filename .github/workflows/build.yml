name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        scripting: [lua, noscripts]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.17
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      with:
        key: ${{ matrix.os }}-gui-${{ matrix.scripting }}-${{ matrix.build_type }}
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi

        if [[ "${{ matrix.scripting }}" == "lua" ]] ; then
          export enable_scripting=on
        else
          export enable_scripting=off
        fi

        if [[ "${{ runner.os }}" == "macOS" ]] ; then
          export skia_arch=arm64
        else
          export skia_arch=x64
        fi

        curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip
        # 自动覆盖解压，不提示
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          7z x skia.zip -aoa -o"skia"
        else
          unzip -o skia.zip -d skia
        fi

        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DENABLE_TESTS=ON \
          -DENABLE_SCRIPTING=$enable_scripting \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-${{ runner.os }}-${{ matrix.scripting }}
        path: |
          build/bin/aseprite${{ runner.os == 'Windows' && '.exe' || '' }}
          build/bin/data
          build/bin/*${{ runner.os == 'Windows' && '.dll' || '.dylib' }}
